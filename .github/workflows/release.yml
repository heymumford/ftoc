name: Release Workflow

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Get version from pom.xml
        id: get_version
        run: echo "VERSION=$(grep -A 1 "<artifactId>ftoc</artifactId>" pom.xml | grep "<version>" | sed -e 's/<version>\(.*\)<\/version>/\1/')" >> $GITHUB_OUTPUT

      - name: Generate changelog
        run: |
          chmod +x .github/scripts/generate-changelog.sh
          .github/scripts/generate-changelog.sh > changelog-entry.md
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body_path: changelog-entry.md
          files: |
            target/ftoc-${{ steps.get_version.outputs.VERSION }}.jar
            target/ftoc-${{ steps.get_version.outputs.VERSION }}-with-dependencies.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md
        run: |
          # Extract new changelog content
          NEW_CONTENT=$(cat changelog-entry.md)
          
          # Update the CHANGELOG.md file
          awk -v new="$NEW_CONTENT" '/## \[Unreleased\]/ {
            print $0;
            print "";
            print new;
            next;
          } 1' CHANGELOG.md > CHANGELOG.md.new
          
          mv CHANGELOG.md.new CHANGELOG.md
          
          # Set git config
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Commit and push the updated CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "docs(changelog): update for release v${{ steps.get_version.outputs.VERSION }} [skip ci]"
          git push
